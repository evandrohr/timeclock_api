{"version":3,"sources":["services/auth.js","services/api.js","pages/SignUp/index.js","components/header/Header.js","pages/SignIn/index.js","components/events/list/List.js","components/events/create_events/CreateEvents.js","components/events/Events.js","pages/Dashboard/index.js","routes.js","App.js","index.js","assets/logo.svg"],"names":["getToken","localStorage","getItem","login","token","setItem","logout","removeItem","setCurrentUserId","user_id","getCurrentUserId","setCurrentUserName","user_name","api","axios","create","baseURL","interceptors","request","use","a","config","headers","Authorization","SignUp","state","username","email","password","confirm_password","error","handleSignUp","e","preventDefault","setState","post","props","history","push","console","log","onSubmit","this","src","Logo","alt","type","placeholder","onChange","target","value","to","Component","withRouter","Header","Brand","icon","size","library","add","faCheckCircle","faTrashAlt","SignIn","handleSignIn","response","data","auth_token","List","event","requestInfo","method","Headers","window","confirm","event_time","fetch","id","loadEvents","Body","responsive","events","map","index","key","className","Moment","format","type_evt","href","onClick","editEvent","deleteEvent","CreateEvent","useState","setTypeEvt","show","setShow","handleSubmit","body","JSON","stringify","clock_event","Date","variant","onHide","closeButton","Title","Group","controlId","Label","Control","as","Footer","Events","bind","json","xs","span","offset","faEdit","Dashboard","clock_state","handleSignOut","PrivateRoute","component","rest","render","pathname","from","location","Routes","exact","path","App","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2c17efd5.chunk.js","sourcesContent":["export const TOKEN_KEY = \"@auth-token\";\nexport const USER_ID = \"@user_id\";\nexport const USER_NAME = \"@user_name\";\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const login = token => {\n  localStorage.setItem(TOKEN_KEY, token);\n};\nexport const logout = () => {\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(USER_ID);\n  localStorage.removeItem(USER_NAME);\n};\n\nexport const setCurrentUserId = user_id =>   {\n  localStorage.setItem(USER_ID, user_id)\n};\n\nexport const getCurrentUserId = () => localStorage.getItem(USER_ID);\n\nexport const setCurrentUserName = user_name =>   {\n  localStorage.setItem(USER_NAME, user_name)\n};\nexport const getCurrentUserName = () => localStorage.getItem(USER_NAME);","import axios from \"axios\";\nimport { getToken } from \"./auth\";\n\nconst api = axios.create({\n  baseURL: \"http://18.222.159.99:80/api/v1/\"\n});\n\napi.interceptors.request.use(async config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport default api;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Logo from \"../../assets/logo.svg\"\nimport api from \"../../services/api\";\n\nclass SignUp extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    error: \"\"\n  };\n\n  handleSignUp = async e => {\n    e.preventDefault();\n    const { username, email, password, confirm_password } = this.state;\n    if (!username || !email || !password || !confirm_password) {\n      this.setState({ error: \"All fields are required!\" });\n    } else {\n      try {\n        await api.post(\"/users\", { username, email, password, confirm_password });\n        this.props.history.push(\"/\");\n      } catch (err) {\n        console.log(err);\n        this.setState({ error: \"Error registering your account\" });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSignUp}>\n          <img src={Logo} alt=\"Logo\" />\n          {this.state.error && <p>{this.state.error}</p>}\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            onChange={e => this.setState({ confirm_password: e.target.value })}\n          />\n          <button type=\"submit\">Sign Up</button>\n          <hr />\n          <Link to=\"/\">login</Link>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignUp);","import React, { Component } from 'react';\n   import Navbar from 'react-bootstrap/Navbar';\n   import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n   \n   class Header extends Component {\n     render() {\n       return (\n         <div>\n           <Navbar>\n             <Navbar.Brand>\n               <FontAwesomeIcon icon=\"check-circle\" size=\"lg\"/> Time Clock\n             </Navbar.Brand>\n           </Navbar>\n           <br></br>\n         </div>\n       );\n     }\n   }\n   \n   export default Header;","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport api from \"../../services/api\";\nimport { login, setCurrentUserId, setCurrentUserName } from \"../../services/auth\";\n\nimport '../../App.scss';\nimport Header from '../../components/header/Header';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckCircle, faTrashAlt } from '@fortawesome/free-regular-svg-icons'\n   \nlibrary.add(faCheckCircle, faTrashAlt)\n\n\n// import { Form, Container } from \"./styles\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleSignIn = async e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    if (!email || !password) {\n      this.setState({ error: \"All fields required!\" });\n    } else {\n      try {\n        const response = await api.post(\"/authenticate\", { email, password });\n        login(response.data.auth_token);\n        setCurrentUserId(response.data.user_id);\n        setCurrentUserName(response.data.user_name);\n        this.props.history.push(\"/dashboard\");\n      } catch (err) {\n        this.setState({\n          error:\n            \"Username or Password is incorrect!\"\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Header/>\n        </div>\n        <Container>\n        <form onSubmit={this.handleSignIn}>\n          {this.state.error && <p>{this.state.error}</p>}\n          <Row>\n            <Col>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                onChange={e => this.setState({ email: e.target.value })}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={e => this.setState({ password: e.target.value })}\n              />\n            </Col>  \n          </Row>\n          <Row>\n            <Col>\n            <button type=\"submit\">Submit</button>\n            </Col>\n          </Row>\n          <hr />\n          {/* <Link to=\"/signup\">Sign Up</Link> */}\n        </form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignIn);","import React, { Component } from 'react';\n   import Card from 'react-bootstrap/Card';\n   import Table from 'react-bootstrap/Table';\n   import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n   import Moment from 'moment';\n\n   import { getToken } from \"../../../services/auth\";\n   \n   class List extends Component {\n    async deleteEvent(event) {\n      const requestInfo = {\n        method: 'DELETE',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${getToken()}`\n        }),\n      };\n      if (window.confirm(`Are you sure you want to delete: \"${event.event_time}\"`)) {\n        await fetch(`http://18.222.159.99:80/api/v1/users/${event.user_id}/clock_events/${event.id}`, requestInfo);\n        this.props.loadEvents();\n      }\n    }\n\n    async editEvent(event) {\n\n    }\n\n     render() {\n       return (\n         <div>\n           <Card>\n             <Card.Body>\n             <Table responsive>\n               <tbody>\n                 {this.props.events.map((event, index) => {\n                   return <tr key={event.id}>\n                     <td className=\"col-md-3\">{Moment(event.event_time).format('MM/DD/YYYY hh:mm:ss')}</td>\n                     <td className=\"col-md-3\">{event.type_evt}</td>\n                     <td>\n                       <a className=\"edit\" href=\"#\" onClick={() => this.editEvent(event)}>\n                         <FontAwesomeIcon icon=\"edit\"/>\n                       </a>\n                     </td>\n                     <td>\n                       <a className=\"delete\" href=\"#\" onClick={() => this.deleteEvent(event)}>\n                         <FontAwesomeIcon icon=\"trash-alt\"/>\n                       </a>\n                     </td>\n                   </tr>;\n                 })}\n               </tbody>\n             </Table>\n             </Card.Body>\n           </Card>\n         </div>\n       );\n     }\n   }\n   \n   export default List;","import React, { useState } from \"react\";\n   import Modal from 'react-bootstrap/Modal';\n   import Button from 'react-bootstrap/Button';\n   import Form from 'react-bootstrap/Form';\n   import { getToken,getCurrentUserId } from \"../../../services/auth\";\n   \n   function CreateEvent(props) {\n     const [type_evt, setTypeEvt] = useState('clock_in');\n     const [show, setShow] = useState('');\n\n     const handleSubmit = (async e => {\n      e.preventDefault();\n       await fetch(`http://18.222.159.99:80/api/v1/users/${getCurrentUserId()}/clock_events/`,\n         {\n           method: 'POST',\n           headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json',\n             'Authorization': `Bearer ${getToken()}`\n           },\n           body: JSON.stringify({\n             clock_event: { event_time: new Date(), type_evt: type_evt  , user_id: getCurrentUserId()} \n           })\n         }\n       )\n       setShow(false)\n       setTypeEvt('0')\n       props.loadEvents();\n     });\n   \n     return (\n       <div>\n         <Button onClick={e => setShow(true)} variant=\"dark\" className=\"float-up create_event_btn\">New Clock Event</Button>\n   \n         <Modal show={show || false} onHide={e => setShow(false)}>\n           <Modal.Header closeButton>\n             <Modal.Title>New Clock Event</Modal.Title>\n           </Modal.Header>\n           <Modal.Body>\n           <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Event Type</Form.Label>\n              <Form.Control as=\"select\" onChange={e => setTypeEvt(e.target.value)}>\n                <option value=\"clock_in\">Clock In</option>\n                <option value=\"clock_out\">Clock Out</option>\n              </Form.Control>\n            </Form.Group>\n             {/* <Form.Control type=\"email\" placeholder=\"0 ou 1\" value={type_evt || ''} onChange={e => setTypeEvt(e.target.value)} /> */}\n           </Modal.Body>\n           <Modal.Footer>\n             <Button variant=\"secondary\" onClick={e => setShow(false)}>\n               Close\n             </Button>\n             <form onSubmit={handleSubmit}>\n               <Button variant=\"dark\" type=\"submit\">\n                 Create\n               </Button>\n             </form>\n           </Modal.Footer>\n         </Modal>\n       </div>\n     );\n   }\n   \n   export default CreateEvent;","  import React, { Component } from 'react';\n  import Row from 'react-bootstrap/Row';\n  import Col from 'react-bootstrap/Col';\n  import List from './list/List';\n  import { getToken, getCurrentUserId } from \"../../services/auth\";\n  import CreateEvent from './create_events/CreateEvents';\n\n   \n   class Events extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        events: []\n      };\n      this.loadEvents = this.loadEvents.bind(this);\n    };\n    \n    async loadEvents() {\n      let token = getToken()\n      const requestInfo = {\n        method: 'GET',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }),\n      };\n      let response = await fetch(`http://18.222.159.99:80/api/v1/users/${getCurrentUserId()}/clock_events/`, requestInfo);\n      const events = await response.json();\n      this.setState({ events: events });\n    }\n\n    componentDidMount() {\n      this.loadEvents();\n    }\n\n     render() {\n       return (\n         <Row>\n           <Col xs={{ span: 8, offset: 2 }} className=\"events_list\">\n             <p className=\"title\">Events</p>\n             <CreateEvent loadEvents={this.loadEvents}/>\n             <List loadEvents={this.loadEvents} events={this.state.events}/>\n           </Col>\n         </Row>\n       );\n     }\n   }\n   \n   export default Events;","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container'\nimport '../../App.scss';\nimport Header from '../../components/header/Header';\nimport Events from '../../components/events/Events';\n\nimport { logout, getCurrentUserName } from \"../../services/auth\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckCircle, faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons'\n\nlibrary.add(faCheckCircle, faTrashAlt, faEdit)\n\nclass Dashboard extends Component {\n  state = {\n    username: \"\",\n    clock_state: \"\",\n    events: []\n  };\n\n  handleSignOut = () => {\n      logout()\n      this.props.history.push(\"/\");\n    };\n\n    // handleClockPress = async e => {\n    //   e.preventDefault();\n    //   const { email, password } = this.state;\n    //   if (!email || !password) {\n    //     this.setState({ error: \"All fields required!\" });\n    //   } else {\n    //     try {\n    //       const response = await api.post(\"/authenticate\", { email, password });\n    //       login(response.data.token);\n    //       this.props.history.push(\"/dashboard\");\n    //     } catch (err) {\n    //       this.setState({\n    //         error:\n    //           \"Username or Password is incorrect!\"\n    //       });\n    //     }\n    //   }\n    // };\n\n  render() {\n    return(\n    <div>\n        <Header/>\n        <button onClick= {this.handleSignOut} variant=\"dark\" className=\"float-right create_event_btn\" >Logout</button>\n        \n      <Container>\n        <h1>{getCurrentUserName()}</h1>\n      </Container>\n      <Container>\n          <Events/>\n      </Container>\n\n    </div>\n    );\n  };\n};\n\nexport default withRouter(Dashboard);","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { isAuthenticated } from \"./services/auth\";\n\nimport SignUp from \"./pages/SignUp\";\nimport SignIn from \"./pages/SignIn\";\nimport Dashboard from \"./pages/Dashboard\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n      )\n    }\n  />\n);\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={SignIn} />\n      <Route path=\"/signup\" component={SignUp} />\n      <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n      <Route path=\"*\" component={() => <h1>Page not found</h1>} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;","import React from \"react\";\nimport \"./styles/global\";\nimport './App.scss';\nimport Routes from \"./routes\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCheckCircle, faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faCheckCircle, faTrashAlt, faEdit);\n\nconst App = () => <Routes />;\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}